version: '3.4'

networks:
  backend:
  frontend:

services:
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123
    networks:
      - backend
    ports:
     - 18001:1433 
  customerapi:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerapi
    build:
      context: .
      dockerfile: CustomerApi/Dockerfile
    networks:
     - backend
    environment:
     - DB_HOST=customer-db
     - DB_NAME=dms_customer
     - DB_SA_PASSWORD=Password123 
     
  productdb:
    container_name: product-db
    image: mysql:8.0.29-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=Password123
    ports:
    - 8003:3306
    networks:
      - backend
  productapi:
    container_name: product-api
    image: ${DOCKER_REGISTRY-}productapi
    build:
      context: .
      dockerfile: ProductApi/Dockerfile
    networks:
     - backend
    environment:
     - DB_HOST=productdb
     - DB_NAME=dms_product
     - DB_ROOT_PASSWORD=Password123  
  
  order-db:
    container_name: order-db
    image: mongo
    ports:
    - 18005:27017
    networks:
      - backend
  orderapi:
    container_name: order-api
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: OrderApi/Dockerfile
    networks:
     - backend
    environment:
      - DB_HOST=order-db
      - DB_NAME=dms_order   

  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: Api Gateway/Dockerfile
    ports:
      - 8001:80 
    networks:
     - backend
     

  authenticationapi:
    container_name: authentication-api
    image: ${DOCKER_REGISTRY-}authenticationapi
    build:
      context: .
      dockerfile: AuthenticationApi/Dockerfile
    networks:
     - backend

  webui:
    image: ${DOCKER_REGISTRY-}webui
    build:
      context: .
      dockerfile: Ui/WebUi/Dockerfile
    ports:
    - 8002:80
    networks:
       - frontend

